loadrt [KINS]KINEMATICS
loadrt [EMCMOT]EMCMOT base_period_nsec=[EMCMOT]BASE_PERIOD servo_period_nsec=[EMCMOT]SERVO_PERIOD num_joints=[KINS]JOINTS num_dio=10 num_aio=10

loadrt CH32 IP="10.10.10.10" PORT="1000" SIMULATION=0
loadrt stepgen step_type=0,0,0,0

addf CH32.read servo-thread
addf CH32.write servo-thread
addf stepgen.make-pulses base-thread


addf stepgen.capture-position servo-thread
addf motion-command-handler servo-thread
addf motion-controller servo-thread
addf stepgen.update-freq servo-thread


net spindle-at-speed    => spindle.0.at-speed

# gpio test setup
setp CH32.0.gpio.PB4.type 1
setp CH32.0.gpio.PA15.type 1

# stepdir test setup
setp CH32.0.stepdir.0.enable 1
setp CH32.0.stepdir.0.dir-offset 50000 # ns
setp CH32.0.stepdir.0.step-len 5000 # ns
setp CH32.0.stepdir.0.max-speed 100.0 # mm/s
setp CH32.0.stepdir.0.max-accel 1000.0 # mm/s2
setp CH32.0.stepdir.0.pos-scale 1000.0 # steps/mm
setp CH32.0.stepdir.0.pos-reset 1
net PB4 CH32.0.stepdir.0.step-pin
net PA15 CH32.0.stepdir.0.dir-pin

# encoder test setup
setp CH32.0.encoder.0.enable 1
setp CH32.0.encoder.0.reset 1
setp CH32.0.encoder.0.find-Z 1
setp CH32.0.encoder.0.pos-scale 1.0
net PE0 CH32.0.encoder.0.A-pin
net PE1 CH32.0.encoder.0.B-pin
net PE2 CH32.0.encoder.0.Z-pin

net estop-out <= iocontrol.0.user-enable-out
net estop-out => iocontrol.0.emc-enable-in
